@inject IApiClient apiClient
@inject IMatToaster matToaster
@inject IStringLocalizer<Global> L


<div style="width:135px;">
    <MatButton Icon="playlist_add" Label="Текст" OnClick="@((e) => OpenDialog())"
               Style="background-color: #4F94C1; color: snow; border-radius: 5px; margin: 10px;"></MatButton>
</div>

<MatDialog Class="modal" @bind-IsOpen="@dialogIsOpen">
    <MatDialogTitle Class="modal-dialog modal-lg">Создать</MatDialogTitle>
    <MatDialogContent Class="modal-content">
        <EditForm Model="@Text">
            <fieldset>
                <div class="col-xl-6">
                    <h3>Инструменты</h3>
                    @*<RadzenHtmlEditor @bind-Value=@value style="height: 500px; margin-bottom: 1rem;" UploadUrl="wwwroot/images"  />*@ 
                </div>
            </fieldset>
            <MatDivider />
        </EditForm>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@(e => { dialogIsOpen = false; })">Закрыть</MatButton>
        <MatButton OnClick="@NewText">Завершить</MatButton>
    </MatDialogActions>
</MatDialog>

@code {
    bool dialogIsOpen = false;
    string value = ""; // Посмотри в документации, как вытащить сгенерированный текст из редактора и дальше просто присвоить нужно
    
    Text Text { get; set; } = new Text();

    [Parameter]
    public int CourseId { get; set; }

    public void OpenDialog()
    {
        dialogIsOpen = true;
    }

    public async Task NewText()
    {
        try
        {
            Text.TextContent = value;
            Text.CourseID = CourseId;
            Text.When = DateTime.Now;
            apiClient.AddEntity(Text);

            await apiClient.SaveChanges();
            matToaster.Add($"text {Text?.Id} created", MatToastType.Success, L["Operation Successful"]);
            StateHasChanged();
        }
        catch (Exception ex)
        {
            matToaster.Add(ex.GetBaseException().Message, MatToastType.Danger, L["Operation Failed"]);
        }
        dialogIsOpen = false;
    }
}


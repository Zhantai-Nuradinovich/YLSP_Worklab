@inject IApiClient apiClient
@inject IMatToaster matToaster
@inject IStringLocalizer<Global> L


<div style="width:135px;">
    <MatButton Icon="playlist_add" Label="Тест" OnClick="@((e) => OpenDialog())"
               Style="background-color: #4F94C1; color: snow; border-radius: 5px; margin: 10px;"></MatButton>
</div>

<MatDialog Class="modal" @bind-IsOpen="@dialogIsOpen">
    <MatDialogTitle Class="modal-dialog modal-lg">Создать</MatDialogTitle>
    <MatDialogContent Class="modal-content">
        <EditForm Model="@Quiz">
            <p>
                <MatTextField Label="Название" Id="@($"{Quiz?.QuizName}")" @bind-Value="@Quiz.QuizName"></MatTextField>
            </p>
            <MatDivider />
        </EditForm>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@(e => { dialogIsOpen = false; })">Закрыть</MatButton>
        <MatButton OnClick="@NewQuiz">Завершить</MatButton>
    </MatDialogActions>
</MatDialog>

@code {
    bool dialogIsOpen = false;
    List<QuizItem> quizItems = new List<QuizItem>();

    Quiz Quiz { get; set; } = new Quiz();
    QuizItem QuizItem { get; set; } = new QuizItem();

    [Parameter]
    public int CourseId { get; set; }

    public void OpenDialog()
    {
        dialogIsOpen = true;
    }

    //При вставки вопросов в БД ошибка => айдишник предоставляется БД => ID сущности Quiz прежний => не существует такого айди в БД => error
    public async Task NewQuiz()
    {
        try
        {
            Quiz.When = DateTime.Now;
            Quiz.CourseID = CourseId;
            apiClient.AddEntity(Quiz);

            await apiClient.SaveChanges();
        }
        catch (Exception ex)
        {
            matToaster.Add(ex.GetBaseException().Message, MatToastType.Danger, L["Operation Failed"]);
        }
        dialogIsOpen = false;
    }
}
